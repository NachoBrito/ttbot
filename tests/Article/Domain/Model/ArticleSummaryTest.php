<?php

namespace NachoBrito\TTBot\Article\Domain\Model;

use PHPUnit\Framework\TestCase;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2021-12-19 at 09:44:27.
 */
class ArticleSummaryTest extends TestCase {

    /**
     * @var ArticleSummary
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp():void {
        $this->object = new ArticleSummary(new Article(), []);
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown():void {
        
    }

    
    public function testConstructor()
    {
        $a1 = new Article();
        $a2 = ["test1", "test2"];
        $o = new ArticleSummary($a1, $a2);
        self::assertSame($a1, $o->getArticle());
        self::assertSame($a2, $o->getSentences());
    }
    /**
     * @todo   Implement testGetArticle().
     */
    public function testGetArticle() {
        $o = new Article();
        self::assertSame($this->object, $this->object->setArticle($o));
        self::assertSame($o, $this->object->getArticle());
    }

    /**
     * @todo   Implement testGetSentences().
     */
    public function testGetSentences() {
        $o = ["test1", "test2"];
        self::assertSame($this->object, $this->object->setSentences($o));
        self::assertSame($o, $this->object->getSentences());
    }

    
    public function testRemoveBulletPoints()
    {
        $a1 = new Article();
        $a2 = ["test1", "test2", " * test 3"];
        $o = new ArticleSummary($a1, $a2);
        self::assertSame($a1, $o->getArticle());
        self::assertSame(["test1", "test2"], $o->getSentences());
    }
    
}
